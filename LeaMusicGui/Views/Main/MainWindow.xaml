<Window
    x:Class="LeaMusicGui.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:behaviors="clr-namespace:LeaMusicGui.Behaviors"
    xmlns:control="clr-namespace:LeaMusicGui.Controls"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:hc="https://handyorg.github.io/handycontrol"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:local="clr-namespace:LeaMusicGui"
    xmlns:local1="clr-namespace:LeaMusicGui.Converters"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:timecontrol="clr-namespace:LeaMusicGui.Controls.TimeControl"
    xmlns:trackcontrol_="clr-namespace:LeaMusicGui.Controls.TrackControl_"
    Title="{Binding ProjectName}"
    Width="1334"
    Height="800"
    MinWidth="1334"
    MinHeight="800"
    d:DataContext="{d:DesignInstance local:MainViewModel}"
    KeyDown="Window_KeyDown"
    mc:Ignorable="d">

    <Window.Resources>
        <local1:LoopWidthPercentageConverter x:Key="LoopWidthPercentageConverter" />
        <local1:PlayheadPercentageOffsetMultiConverter x:Key="PlayheadPercentageOffsetMultiConverter" />
        <local1:SubtractConverter x:Key="SubtractConverter" />
        <BooleanToVisibilityConverter x:Key="BoolToVis" />
    </Window.Resources>

    <Grid Background="#424651">
        <Grid.RowDefinitions>
            <RowDefinition Height="30" />
            <RowDefinition Height="30" />
            <RowDefinition Height="*" />
            <RowDefinition Height="150" />
            <RowDefinition Height="30" />
        </Grid.RowDefinitions>

        <DockPanel Grid.Row="0">
            <Menu DockPanel.Dock="Top">
                <MenuItem Header="_File">
                    <MenuItem Header="_New" />
                    <MenuItem Command="{Binding LoadProjectFileCommand}" Header="_Open Project" />
                    <MenuItem Command="{Binding SaveProjectFileCommand}" Header="_Save Project" />
                    <MenuItem Command="{Binding AddTrackCommand}" Header="_Add Track" />
                    <Separator />
                    <MenuItem Header="_Exit" />
                </MenuItem>
            </Menu>
        </DockPanel>

        <Canvas
            Grid.Row="1"
            Width="{Binding ActualWidth, RelativeSource={RelativeSource AncestorType=Grid}, Converter={StaticResource SubtractConverter}}"
            Height="30"
            HorizontalAlignment="Right"
            Panel.ZIndex="9998"
            IsHitTestVisible="True">

            <i:Interaction.Behaviors>
                <behaviors:LoopBehavior
                    IsLoopBeginDragLeftHandle="{Binding IsLoopBeginDragLeftHandle, Mode=TwoWay}"
                    IsLoopBeginDragRightHandle="{Binding IsLoopBeginDragRightHandle, Mode=TwoWay}"
                    LoopCommand="{Binding LoopSelectionCommand}"
                    LoopEndCommand="{Binding LoopSelectionEndCommand}"
                    LoopStartCommand="{Binding LoopSelectionStartCommand}" />
            </i:Interaction.Behaviors>

            <!--  RULER  -->
            <timecontrol:TimeControl
                Width="{Binding ActualWidth, RelativeSource={RelativeSource AncestorType=Grid}, Converter={StaticResource SubtractConverter}}"
                Height="30"
                IsHitTestVisible="true"
                ViewModel="{Binding TimeControlViewModel}" />

            <control:LoopControl
                Grid.RowSpan="2"
                IsHitTestVisible="False"
                IsLoopBeginDragLeftHandle="{Binding IsLoopBeginDragLeftHandle, Mode=TwoWay}"
                IsLoopBeginDragRightHandle="{Binding IsLoopBeginDragRightHandle, Mode=TwoWay}"
                MainCanvasWidth="{Binding ElementName=MainCanvas, Path=ActualWidth}"
                SelectionEndPercentage="{Binding SelectionEndPercentage}"
                SelectionStartPercentage="{Binding SelectionStartPercentage}" />

            <!--  Invisible Rectangle for Loop Left/Right Handle  -->
            <Rectangle
                Width="1"
                Height="30"
                Fill="Transparent"
                IsHitTestVisible="true">
                <i:Interaction.Behaviors>
                    <behaviors:LoopHandleBehavior IsLoopBeginDragLeftHandle="{Binding IsLoopBeginDragLeftHandle, Mode=TwoWay}" IsLoopBeginDragRightHandle="{Binding IsLoopBeginDragRightHandle, Mode=TwoWay}" />
                </i:Interaction.Behaviors>
                <Rectangle.RenderTransform>
                    <TransformGroup>
                        <!--  width  -->
                        <ScaleTransform>
                            <ScaleTransform.ScaleX>
                                <MultiBinding Converter="{StaticResource LoopWidthPercentageConverter}">
                                    <Binding Path="SelectionStartPercentage" />
                                    <Binding Path="SelectionEndPercentage" />
                                    <Binding ElementName="MainCanvas" Path="ActualWidth" />
                                </MultiBinding>
                            </ScaleTransform.ScaleX>
                        </ScaleTransform>
                        <!--  Offset StartPosition  -->
                        <TranslateTransform>
                            <TranslateTransform.X>
                                <MultiBinding Converter="{StaticResource PlayheadPercentageOffsetMultiConverter}">
                                    <Binding Path="SelectionStartPercentage" />
                                    <Binding ElementName="MainCanvas" Path="ActualWidth" />
                                </MultiBinding>
                            </TranslateTransform.X>
                        </TranslateTransform>
                    </TransformGroup>
                </Rectangle.RenderTransform>
            </Rectangle>

        </Canvas>
        <ScrollViewer
            Grid.Row="2"
            Margin="0,0,0,0"
            VerticalScrollBarVisibility="Auto">

            <!--  Waveform CANVAS  -->
            <Grid
                x:Name="WaveformCanvas"
                Width="{Binding ActualWidth, RelativeSource={RelativeSource AncestorType=Window}}"
                Background="#424651">

                <ItemsControl Margin="0,0,0,0" ItemsSource="{Binding Tracks}">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <StackPanel />
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>

                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <StackPanel>
                                <trackcontrol_:TrackControl HeightScaleFactor="{Binding DataContext.HeightScaleFactor, RelativeSource={RelativeSource AncestorType=Window}}" RequestWaveformUpdateCommand="{Binding DataContext.RequestWaveformUpdateCommand, RelativeSource={RelativeSource AncestorType=Window}}" />
                                <Separator />
                            </StackPanel>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>

                <!--  Main CANVAS  -->
                <Canvas
                    x:Name="MainCanvas"
                    Width="{Binding ActualWidth, RelativeSource={RelativeSource AncestorType=Grid}, Converter={StaticResource SubtractConverter}}"
                    Height="{Binding ActualHeight, RelativeSource={RelativeSource AncestorType=Grid}}"
                    Margin="100,0,0,0"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Top"
                    Background="Transparent"
                    IsHitTestVisible="True">

                    <i:Interaction.Behaviors>
                        <behaviors:TimelineInteractionBehavior
                            IsBeatMarkerMoving="{Binding IsBeatMarkerMoving, Mode=TwoWay}"
                            MoveBeatMarkerCommand="{Binding MoveBeatMarkerCommand}"
                            ResetZoomParameterCommand="{Binding ResetZoomParameterCommand}"
                            ZoomWaveformMouseCommand="{Binding ZoomWaveformMouseCommand}" />

                        <behaviors:PlayheadPositionBehavior PlayheadPositionCommand="{Binding JumpToSecFromMouseClickCommand}" />
                    </i:Interaction.Behaviors>



                    <!--  MARKERS  -->
                    <Canvas Width="{Binding ActualWidth, RelativeSource={RelativeSource AncestorType=Canvas}}" Height="20" />
                    <ItemsControl ItemsSource="{Binding BeatMarkers}">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <Canvas Width="{Binding ActualWidth, RelativeSource={RelativeSource AncestorType=Canvas}}" Height="20" />
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>

                                <Canvas Width="{Binding ActualWidth, RelativeSource={RelativeSource AncestorType=Canvas}}">
                                    <!--  Line Marker  -->
                                    <Rectangle
                                        Width="1"
                                        Height="{Binding ActualHeight, ElementName=MainCanvas}"
                                        Fill="DarkRed"
                                        Visibility="{Binding Visible, Converter={StaticResource BoolToVis}}">
                                        <Canvas.Left>
                                            <MultiBinding Converter="{StaticResource PlayheadPercentageOffsetMultiConverter}">
                                                <Binding Path="PositionRelativeView" />
                                                <Binding ElementName="MainCanvas" Path="ActualWidth" />
                                            </MultiBinding>
                                        </Canvas.Left>
                                    </Rectangle>

                                    <!--  Text Marker  -->
                                    <Button
                                        Canvas.Top="0"
                                        Margin="1,0,0,0"
                                        Background="DarkRed"
                                        Content="{Binding Description}"
                                        Foreground="White"
                                        RenderTransformOrigin="0.5,0"
                                        Visibility="{Binding Visible, Converter={StaticResource BoolToVis}}">

                                        <i:Interaction.Behaviors>
                                            <behaviors:BeatMarkerBehavior IsBeatMarkerMoving="{Binding DataContext.IsBeatMarkerMoving, RelativeSource={RelativeSource AncestorType=Window}, Mode=TwoWay}" />
                                        </i:Interaction.Behaviors>

                                        <Button.InputBindings>
                                            <MouseBinding
                                                Command="{Binding DataContext.MarkerClickCommand, RelativeSource={RelativeSource AncestorType=ItemsControl}}"
                                                CommandParameter="{Binding}"
                                                Gesture="RightClick" />
                                            <MouseBinding
                                                Command="{Binding DataContext.MarkerDeleteCommand, RelativeSource={RelativeSource AncestorType=ItemsControl}}"
                                                CommandParameter="{Binding}"
                                                Gesture="LeftClick" />
                                        </Button.InputBindings>


                                        <Canvas.Left>
                                            <MultiBinding Converter="{StaticResource PlayheadPercentageOffsetMultiConverter}">
                                                <Binding Path="PositionRelativeView" />
                                                <Binding ElementName="MainCanvas" Path="ActualWidth" />
                                            </MultiBinding>
                                        </Canvas.Left>
                                    </Button>
                                </Canvas>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>

                    <!--  Playhead  -->
                    <Rectangle
                        Name="Playhead"
                        Width="1.3"
                        Height="{Binding ActualHeight, RelativeSource={RelativeSource AncestorType=Canvas}}"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Center"
                        Fill="Green"
                        Opacity="0.8">
                        <Canvas.Left>
                            <MultiBinding Converter="{StaticResource PlayheadPercentageOffsetMultiConverter}">
                                <Binding Path="PlayheadPercentage" />
                                <Binding ElementName="MainCanvas" Path="ActualWidth" />
                            </MultiBinding>
                        </Canvas.Left>
                    </Rectangle>
                </Canvas>

            </Grid>
        </ScrollViewer>

        <Grid Grid.Row="3" Background="#424341">
            <control:TransportControl HeightScaleFactor="{Binding HeightScaleFactor}" />
        </Grid>

        <StackPanel Grid.Row="4" VerticalAlignment="Center">
            <TextBlock
                HorizontalAlignment="Center"
                Foreground="White"
                Text="{Binding StatusMessages}" />
        </StackPanel>

    </Grid>
</Window>
